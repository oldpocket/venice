Abstract

This document outlines a list of tasks intended for Version 2. It contains
planned rewrites for interfaces which have expanded beyond the original use and
are thus difficult to maintain, deferred bugs and future features.

Introduction
The structure for version 1 was well designed because it facilitated the
easy addition of many useful features and is fairly maintainable. So the goal
would be to have a similarly flexible design for version 2.

One danger this approach is that we risk falling victim to "Second System
Effect", an anti-pattern where by successor systems tend to try and include all
the features missing from version 1.

I mention this now, so I can keep it in mind and hopefully avoid Second System
Effect.

I've also started this document with the assumption that version 2 would be an
entirely new work, but there's nothing to prevent version 1 from being
successively refactored until it has the features/structure we want.

Scope

This document isn't intended doesn't prevent any of these tasks being
implemented in version 1. It is merely for developer guidance, allowing a
developer to avoid spending hours on minor bugs when it may be fixed as part of
a larger piece of work.

Tasks

1. A more general interface for data storage, hiding the implementation
details from the objects, whilst still allowing for other data stores.
Currently the type of stores supported are : java preferences, sql databases,
internal database. Future databases could include nosql databases, XML, JSON
etc.

The interface would allow storage all types of Venice objects, including
price data, equations, alerts, macros, preferences, index definitions etc.


2. Be less ASX centric.

We may deprecate all ordinaries table entirely, or place it under a
indeces menu.

3. Better support for the keyboard.

Deferred Bugs/Features

1. Ordinary are not filtered correctly #1528817
This problem arises out of the interaction between the quote cache and the
table. The quote cache doesn't care about the "flavour" of a symbol, and the
table display can only filter based on an equation. The bug is not severe enough
to warrant reworking large sections of both the quote and table code at this
time.


2. add (sic) a criteria for selectin (sic) symbols #1528799
This feature involves adding a "type" to a symbol. One difficulty is that
imported quotes don't have this data, and backward compatability must be
maintained.


Future Features for either Version 1 or 2

- Database
  - When the cache expiry is triggered, preload most used symbols.
  - Use of primary and sekundary currencies
    - The primary currency should be used for the value of your portfolio.
    - Calculation of currency exchange rates.
  - Database for all known instruments
  - New data modell with timestamps and market deepness

- Use of resources
  - Reduce the memory footprint of PointAndFigure charts.

- Language
  - Allow String variables to be declared in the Gondola language.
  - Use of Gondola for writing indicators instead of indicators being hardcoded
    in Java.
  - Support for coding in CTL and MT4, EasyLanguage etc.

- Trading
  - Support for splits, ex/cum dividend trading.
  - Support for interest payments in portfolio.
  - Support for brokers (e. g. PATS/IB). See feature request #891276.
  - Support for fundamental analysis
  - Calculation for options pricing, Greeks and futures. See feature request
    #1550970.
  - Use of 'intelligent' indicators that show the strength of a signal (e. g.
    use a scale from 0 - 100 for a signal. If the chart crosses the SMA upwards
    the signal is 75 ('buy'), if the chart crosses downwards the signal is
    returns 25 ('sell'). Allow the user to define the worth of a signal.
  - Many many more indicators.
  - Speedtrader.
  - Trading from charts.
  - One click trading.
  - Routines for money management
    - Calclate the 'free' money of a portfolio.

- Charts
  - Make chart levels an object instead of just an integer in a list.
    (Required so that lines drawn in a chart across levels flip and scale
    correctly)
  - Colour preferences -> backgrounds, charts, lines etc.
    - Different backgrounds for each chart.
    - Usage of a ColorSelection dialog.
    - Change the background with a popup menu showing a ColorSelection dialog
      instead of using the Preferences dialog.
    - Logarithmic axis skales.
    - Zooming out step by step.
  - Charting of the portfolio development and portfolio structure.
  - Export charts to SVG.
  - New chart types: Histogram and Heikin-Ashi

- Code
  - Support of IDEs (Borland JBuilder 2005, Netbeans).
  - Beautify the code (e. g. as an special ant task).
  - Add api documentation of all (public) methods, constants and variables.
  - Add more unit tests.

- User Interface, usability and i18n
  - Change of the Layout (Metal, Windows, CDE).
  - Predefined and definable workspaces (with more than one monitor).
  - No need to restart after changing the language.
  - Import/Export of paper trade settings. See feature request #3519382
  - StatusBar with detailed description of tool tips.
  - Manuals in all other supported languages.
  - Review of the translations.

- Support of plugins

- Data Storage and export
  - Encrypted storage of private data.
  - Support for clouds
  - Export and Import data to csv, xml ... with configuration
    - Improve importing data from csv (e. g. import of many quotes for one
      stock in a csv).

- Reports
  - Reports of backtesting, portfolio etc. in HTML

- Online-Update
  - Support of updates not of the whole program but the changed classes


authors:
mhummel
bromc
